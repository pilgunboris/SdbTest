/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package sdbtester.gui;

import java.awt.CardLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.HashMap;
import javax.swing.JComboBox;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import org.apache.log4j.Logger;
import sdbtester.STestCaseHelper;
import sdbtester.analysis.SAnalysisHelper;

/**
 *
 * @author boris
 */
public class StartForm extends javax.swing.JFrame {

    private STestCaseHelper appSettings;
    private static Logger logger = Logger.getLogger(StartForm.class);
    private HashMap<Integer, String> cardsMap = new HashMap();
    private int CurrentCard = 0;
    private CardLayout card = null;

    /**
     * Creates new form StartForm
     */
    public StartForm() {
        initComponents();
        card = (CardLayout) PanelTestingCards.getLayout();
        appSettings = STestCaseHelper.getInstance();
        spinnerAppServerPortNum.setValue(appSettings.getAppServerPort());
        btnBackTestCreation.setEnabled(false);
        btnForwardTestCreation.setEnabled(false);
        jPanelNameOfTest1.getJtextNameOfTestCase().addKeyListener(new KeyAdapter() {

            @Override
            public void keyTyped(KeyEvent ke) {
                if (jPanelNameOfTest1.getJtextNameOfTestCase().getText().length() > 1) {
                    btnForwardTestCreation.setEnabled(true);
                } else {
                    btnForwardTestCreation.setEnabled(false);
                }
            }
        });

        jPanelNameOfTest1.getComboBoxExistingTests().addActionListener(new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent ae) {
                if ((jPanelNameOfTest1.getComboModel_ExistingTests().getSize() > 0) && !jPanelNameOfTest1.getComboModel_ExistingTests().getSelectedItem().equals(jPanelNameOfTest1.getComboModel_ExistingTests().getElementAt(0))) {
                    btnForwardTestCreation.setEnabled(true);
                }
            }
        });


        cardMysqlDbSettings1.getComboSelectMysqlDB().addActionListener(new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent ae) {
                if (cardMysqlDbSettings1.getComboDatabasesModel().getSize() > 0 && !cardMysqlDbSettings1.getComboDatabasesModel().getSelectedItem().toString().equals(cardMysqlDbSettings1.getComboDatabasesModel().getElementAt(0))) {
                    btnForwardTestCreation.setEnabled(true);
                } else {
                    btnForwardTestCreation.setEnabled(false);
                }
            }
        });

        cardsMap.put(0, "CardTestName");
        cardsMap.put(1, "CardDbConnect");
        cardsMap.put(2, "CardQueryManager");
        cardsMap.put(3, "CardTestRunning");

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPainMain = new javax.swing.JTabbedPane();
        PanelTesting = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        btnBackTestCreation = new javax.swing.JButton();
        btnForwardTestCreation = new javax.swing.JButton();
        PanelTestingCards = new javax.swing.JPanel();
        jPanelNameOfTest1 = new sdbtester.gui.CardNameOfTest();
        cardMysqlDbSettings1 = new sdbtester.gui.CardMysqlDbSettings();
        cardQueryManager1 = new sdbtester.gui.CardQueryManager();
        cardTestRunning2 = new sdbtester.gui.CardTestRunning();
        jPanel1 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        jPanel8 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        comboDbTypes1 = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        comboExistingTests1 = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        areaDescriptionTest1 = new javax.swing.JTextArea();
        jLabel7 = new javax.swing.JLabel();
        jPanel9 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        comboDbTypes2 = new javax.swing.JComboBox();
        jLabel6 = new javax.swing.JLabel();
        comboExistingTests2 = new javax.swing.JComboBox();
        jScrollPane2 = new javax.swing.JScrollPane();
        areaDescriptionTest2 = new javax.swing.JTextArea();
        jLabel8 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        btnApplyAppServerPort = new javax.swing.JButton();
        spinnerAppServerPortNum = new javax.swing.JSpinner();
        jPanel4 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTabbedPainMain.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jTabbedPainMainStateChanged(evt);
            }
        });

        jPanel6.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        btnBackTestCreation.setText("Назад");
        btnBackTestCreation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackTestCreationActionPerformed(evt);
            }
        });
        jPanel6.add(btnBackTestCreation);

        btnForwardTestCreation.setText("Вперед");
        btnForwardTestCreation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnForwardTestCreationActionPerformed(evt);
            }
        });
        jPanel6.add(btnForwardTestCreation);

        PanelTestingCards.setLayout(new java.awt.CardLayout());
        PanelTestingCards.add(jPanelNameOfTest1, "CardTestName");
        PanelTestingCards.add(cardMysqlDbSettings1, "CardDbConnect");
        PanelTestingCards.add(cardQueryManager1, "CardQueryManager");
        PanelTestingCards.add(cardTestRunning2, "CardTestRunning");

        javax.swing.GroupLayout PanelTestingLayout = new javax.swing.GroupLayout(PanelTesting);
        PanelTesting.setLayout(PanelTestingLayout);
        PanelTestingLayout.setHorizontalGroup(
            PanelTestingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelTestingLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addComponent(PanelTestingCards, javax.swing.GroupLayout.DEFAULT_SIZE, 1009, Short.MAX_VALUE)
        );
        PanelTestingLayout.setVerticalGroup(
            PanelTestingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelTestingLayout.createSequentialGroup()
                .addComponent(PanelTestingCards, javax.swing.GroupLayout.DEFAULT_SIZE, 460, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPainMain.addTab("Тестирование", PanelTesting);

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Выбор тестов для анализа"));

        jButton2.setText("Обновить списки");

        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder("Тест 1"));

        jLabel2.setText("Тип БД:");

        comboDbTypes1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        comboDbTypes1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboDbTypes1ActionPerformed(evt);
            }
        });

        jLabel3.setText("Имя:");

        comboExistingTests1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        comboExistingTests1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboExistingTests1ActionPerformed(evt);
            }
        });

        areaDescriptionTest1.setColumns(20);
        areaDescriptionTest1.setRows(5);
        jScrollPane1.setViewportView(areaDescriptionTest1);

        jLabel7.setText("Описание:");

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(comboExistingTests1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(comboDbTypes1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(comboDbTypes1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(comboExistingTests1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder("Тест 2"));

        jLabel4.setText("Тип БД:");

        comboDbTypes2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        comboDbTypes2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboDbTypes2ActionPerformed(evt);
            }
        });

        jLabel6.setText("Имя:");

        comboExistingTests2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        comboExistingTests2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboExistingTests2ActionPerformed(evt);
            }
        });

        areaDescriptionTest2.setColumns(20);
        areaDescriptionTest2.setRows(5);
        jScrollPane2.setViewportView(areaDescriptionTest2);

        jLabel8.setText("Описание:");

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(comboDbTypes2, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(comboExistingTests2, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(comboDbTypes2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(comboExistingTests2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 8, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jButton2)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2)
                .addContainerGap())
        );

        jPanel7.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));
        jPanel7.setLayout(new java.awt.GridLayout(1, 0));

        jLabel5.setForeground(new java.awt.Color(0, 0, 0));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Анализ результатов тестирования");
        jPanel7.add(jLabel5);

        jButton1.setText("Отобразить");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, 987, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jTabbedPainMain.addTab("Анализ", jPanel1);

        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setText("Номер порта: ");

        btnApplyAppServerPort.setText("Применить");
        btnApplyAppServerPort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnApplyAppServerPortActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnApplyAppServerPort))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(spinnerAppServerPortNum, javax.swing.GroupLayout.DEFAULT_SIZE, 174, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(spinnerAppServerPortNum, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnApplyAppServerPort)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(681, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(416, Short.MAX_VALUE))
        );

        jTabbedPainMain.addTab("Настройки", jPanel2);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(1026, 1026, 1026))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jTabbedPainMain, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPainMain)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private void btnForwardTestCreationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnForwardTestCreationActionPerformed
        switch (CurrentCard) {
            //CardTestName
            case 0: {
                if (jPanelNameOfTest1.getComboModel_ExistingTests().getSize() > 0 && jPanelNameOfTest1.getComboModel_ExistingTests().getSelectedItem().equals(jPanelNameOfTest1.getComboModel_ExistingTests().getElementAt(0))) {
                    if (jPanelNameOfTest1.getJtextNameOfTestCase().getText().length() > 0) {
                        String caseName = jPanelNameOfTest1.getJtextNameOfTestCase().getText();
                        String dbType = jPanelNameOfTest1.getComboBoxDbTypes().getSelectedItem().toString();
                        String caseDescription = jPanelNameOfTest1.getArea_DescriptionOfTestCase().getText();
                        if (appSettings.setCurrentTestName(caseName, dbType, caseDescription)) {
                            goToNextCard(true);
                            btnForwardTestCreation.setEnabled(appSettings.getTestCurrentDbName().equals(""));
                            if (btnForwardTestCreation.isEnabled()) {
                                cardMysqlDbSettings1.getComboDatabasesModel().setSelectedItem(appSettings.getTestCurrentDbName());
                            }
                        }
                    } else {
                    }
                } else if (jPanelNameOfTest1.getComboModel_ExistingTests().getSize() > 0) {
                    if (appSettings.loadTestFromTemplate(jPanelNameOfTest1.getComboModel_ExistingTests().getSelectedItem().toString(), jPanelNameOfTest1.getComboBoxDbTypes().getSelectedItem().toString())) {
                        goToNextCard(true);
                        btnForwardTestCreation.setEnabled(appSettings.getTestCurrentDbName().equals(""));
                        if (btnForwardTestCreation.isEnabled()) {
                            cardMysqlDbSettings1.getComboDatabasesModel().setSelectedItem(appSettings.getTestCurrentDbName());
                        }
                    }
                }
                break;
            }
            //CardDbConnect
            case 1: {
                if (cardMysqlDbSettings1.getComboDatabasesModel().getSize() > 0
                        && cardMysqlDbSettings1.getDataBase().CreateConnectionForCertainDB(cardMysqlDbSettings1.getComboDatabasesModel().getSelectedItem().toString())) {
                    appSettings.storeTestCaseSettings(appSettings.getTestCaseName(), appSettings.getTestDbType());
                    goToNextCard(true);
                }
                break;
            }
            //CardQueryManager
            case 2: {
                goToNextCard(true);
                appSettings.setProgressThread(new Thread(new ProgressThread(cardTestRunning2)));
                appSettings.getProgressThread().start();
                break;
            }
            case 3: {
            }

        }
    }//GEN-LAST:event_btnForwardTestCreationActionPerformed

    private void btnBackTestCreationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackTestCreationActionPerformed
        goToNextCard(false);
        if (appSettings.getProgressThread().isAlive()) {
            appSettings.getProgressThread().interrupt();
            appSettings.setProgressThread(null);
        }
    }//GEN-LAST:event_btnBackTestCreationActionPerformed

    private void btnApplyAppServerPortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnApplyAppServerPortActionPerformed
        appSettings.setAppServerPort(Integer.parseInt(spinnerAppServerPortNum.getValue().toString()));
        if (appSettings.storeGlobalSettings()) {
            JOptionPane.showMessageDialog(null, "Номер порта успешно изменен", "Info", JOptionPane.OK_OPTION);
        }
    }//GEN-LAST:event_btnApplyAppServerPortActionPerformed

    private void jTabbedPainMainStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jTabbedPainMainStateChanged
        if (jTabbedPainMain.getSelectedIndex() == 1) {
            comboDbTypes1.removeAllItems();
            comboDbTypes2.removeAllItems();
            comboDbTypes1.addItem(STestCaseHelper.DB_TYPE_MYSQL);
            comboDbTypes1.addItem(STestCaseHelper.DB_TYPE_MONGO);
            comboDbTypes2.addItem(STestCaseHelper.DB_TYPE_MYSQL);
            comboDbTypes2.addItem(STestCaseHelper.DB_TYPE_MONGO);
            comboExistingTests1.removeAllItems();
            comboExistingTests2.removeAllItems();
            LoadExistingTestCases(STestCaseHelper.DB_TYPE_MYSQL, comboExistingTests1);
            LoadExistingTestCases(STestCaseHelper.DB_TYPE_MYSQL, comboExistingTests2);
        }
    }//GEN-LAST:event_jTabbedPainMainStateChanged

    private void comboDbTypes1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboDbTypes1ActionPerformed
        comboExistingTests1.removeAllItems();
        if (comboDbTypes1.getSelectedItem() != null) {
            LoadExistingTestCases(comboDbTypes1.getSelectedItem().toString(), comboExistingTests1);
        }
    }//GEN-LAST:event_comboDbTypes1ActionPerformed

    private void comboDbTypes2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboDbTypes2ActionPerformed
        comboExistingTests2.removeAllItems();
        if (comboDbTypes2.getSelectedItem() != null) {
            LoadExistingTestCases(comboDbTypes2.getSelectedItem().toString(), comboExistingTests2);
        }
    }//GEN-LAST:event_comboDbTypes2ActionPerformed

    private void comboExistingTests1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboExistingTests1ActionPerformed
        if (comboExistingTests1.getSelectedItem() != null && comboDbTypes1.getSelectedItem() != null) {
            SAnalysisHelper sah = new SAnalysisHelper();
            sah.loadTestFromTemplate(comboExistingTests1.getSelectedItem().toString(), comboDbTypes1.getSelectedItem().toString());
            appSettings.setAnalysisTest1(sah);
            areaDescriptionTest1.setText(sah.getTestCaseDescription());
        } else {
            appSettings.setAnalysisTest1(new SAnalysisHelper());
            areaDescriptionTest1.setText("");
        }
    }//GEN-LAST:event_comboExistingTests1ActionPerformed

    private void comboExistingTests2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboExistingTests2ActionPerformed
        if (comboExistingTests2.getSelectedItem() != null && comboDbTypes2.getSelectedItem() != null) {
            SAnalysisHelper sah = new SAnalysisHelper();
            sah.loadTestFromTemplate(comboExistingTests2.getSelectedItem().toString(), comboDbTypes2.getSelectedItem().toString());
            appSettings.setAnalysisTest2(sah);
            areaDescriptionTest2.setText(sah.getTestCaseDescription());
        } else {
            appSettings.setAnalysisTest2(new SAnalysisHelper());
            areaDescriptionTest2.setText("");
        }
    }//GEN-LAST:event_comboExistingTests2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        JFrame analysisForm = new AnalysisForm();
        analysisForm.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;




                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(StartForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(StartForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(StartForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StartForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new StartForm().setVisible(true);
            }
        });


    }

    JPanel makePane() {
        JPanel p = new JPanel();
        p.setOpaque(false);
        return p;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel PanelTesting;
    private javax.swing.JPanel PanelTestingCards;
    private javax.swing.JTextArea areaDescriptionTest1;
    private javax.swing.JTextArea areaDescriptionTest2;
    private javax.swing.JButton btnApplyAppServerPort;
    private javax.swing.JButton btnBackTestCreation;
    private javax.swing.JButton btnForwardTestCreation;
    private sdbtester.gui.CardMysqlDbSettings cardMysqlDbSettings1;
    private sdbtester.gui.CardQueryManager cardQueryManager1;
    private sdbtester.gui.CardTestRunning cardTestRunning2;
    private javax.swing.JComboBox comboDbTypes1;
    private javax.swing.JComboBox comboDbTypes2;
    private javax.swing.JComboBox comboExistingTests1;
    private javax.swing.JComboBox comboExistingTests2;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private sdbtester.gui.CardNameOfTest jPanelNameOfTest1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPainMain;
    private javax.swing.JSpinner spinnerAppServerPortNum;
    // End of variables declaration//GEN-END:variables

    private void goToNextCard(boolean goToNext) {
        if (goToNext && cardsMap.containsKey(CurrentCard + 1)) {
            ++CurrentCard;
            card.show(PanelTestingCards, cardsMap.get(CurrentCard));
            if (!cardsMap.containsKey(CurrentCard + 1)) {
                btnForwardTestCreation.setEnabled(false);
            }
            btnBackTestCreation.setEnabled(true);
        } else if (cardsMap.containsKey(CurrentCard - 1)) {
            --CurrentCard;
            card.show(PanelTestingCards, cardsMap.get(CurrentCard));
            if (!cardsMap.containsKey(CurrentCard - 1)) {
                btnBackTestCreation.setEnabled(false);
            }
            btnForwardTestCreation.setEnabled(true);
        }
    }

    private boolean LoadExistingTestCases(String dbType, JComboBox combo) {
        try {
            File f = new File(STestCaseHelper.TEST_CASES_MAIN_PATH + dbType);
            if (f.isDirectory()) {
                File[] testCases = f.listFiles();
                for (int i = 0; i < testCases.length; ++i) {
                    File cur = new File(testCases[i].getPath());
                    File tmp = null;
                    if (cur.isDirectory()
                            && (new File(cur.getPath() + "/" + STestCaseHelper.SETTINGS_TEST_CASE_PROP_FILE).isFile())
                            && checkIfTestHasResults(testCases[i].getName(), dbType)) {
                        combo.addItem(testCases[i].getName());
                    }
                }
            } else {
                return false;
            }
        } catch (Exception e) {
            logger.error(e.getStackTrace());
            JOptionPane.showMessageDialog(null, e.getMessage() + e.getStackTrace(), "Not enough mana", JOptionPane.ERROR_MESSAGE);
            return false;
        }
        return true;
    }

    private boolean checkIfTestHasResults(String testName, String dbType) {
        SAnalysisHelper sah = new SAnalysisHelper();
        sah.loadTestFromTemplate(testName, dbType);
        if (!sah.getResultInsert().isEmpty() && !sah.getResultInsertCPU().isEmpty() && !sah.getResultInsertRAM().isEmpty()
                || !sah.getResultSelect().isEmpty() && !sah.getResultSelectCPU().isEmpty() && !sah.getResultSelectRAM().isEmpty()
                || !sah.getResultUpdate().isEmpty() && !sah.getResultUpdateCPU().isEmpty() && !sah.getResultUpdateRAM().isEmpty()
                || !sah.getResultDelete().isEmpty() && !sah.getResultDeleteCPU().isEmpty() && !sah.getResultDeleteRAM().isEmpty()) {
            return true;
        }
        return false;
    }

    public CardTestRunning getCardTestRunning2() {
        return cardTestRunning2;
    }

    public void setCardTestRunning2(CardTestRunning cardTestRunning2) {
        this.cardTestRunning2 = cardTestRunning2;
    }
}
