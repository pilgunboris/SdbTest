/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package sdbtester.gui;

import java.awt.CardLayout;
import java.awt.event.*;
import java.util.HashMap;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import org.apache.log4j.Logger;
import sdbtester.Server;
import sdbtester.TestCaseHelper;

/**
 *
 * @author boris
 */
public class StartForm extends javax.swing.JFrame {

    private TestCaseHelper appSettings;
    private static Logger logger = Logger.getLogger(StartForm.class);
    private HashMap<Integer, String> cardsMap = new HashMap();
    private int CurrentCard = 0;
    private CardLayout card = null;

    /**
     * Creates new form StartForm
     */
    public StartForm() {
        initComponents();
        card = (CardLayout) PanelTestingCards.getLayout();
        appSettings = TestCaseHelper.getInstance();
        spinnerAppServerPortNum.setValue(appSettings.getAppServerPort());
        btnBackTestCreation.setEnabled(false);
        btnForwardTestCreation.setEnabled(false);
        jPanelNameOfTest1.getJtextNameOfTestCase().addKeyListener(new KeyAdapter() {

            @Override
            public void keyTyped(KeyEvent ke) {
                if (jPanelNameOfTest1.getJtextNameOfTestCase().getText().length() > 1) {
                    btnForwardTestCreation.setEnabled(true);
                } else {
                    btnForwardTestCreation.setEnabled(false);
                }
            }
        });

        jPanelNameOfTest1.getComboBoxExistingTests().addActionListener(new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent ae) {
                if ((jPanelNameOfTest1.getComboModel_ExistingTests().getSize() > 0) && !jPanelNameOfTest1.getComboModel_ExistingTests().getSelectedItem().equals(jPanelNameOfTest1.getComboModel_ExistingTests().getElementAt(0))) {
                    btnForwardTestCreation.setEnabled(true);
                }
            }
        });


        cardMysqlDbSettings1.getComboSelectMysqlDB().addActionListener(new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent ae) {
                if (cardMysqlDbSettings1.getComboDatabasesModel().getSize() > 0 && !cardMysqlDbSettings1.getComboDatabasesModel().getSelectedItem().toString().equals(cardMysqlDbSettings1.getComboDatabasesModel().getElementAt(0))) {
                    btnForwardTestCreation.setEnabled(true);
                } else {
                    btnForwardTestCreation.setEnabled(false);
                }
            }
        });

        cardsMap.put(0, "CardTestName");
        cardsMap.put(1, "CardDbConnect");
        cardsMap.put(2, "CardQueryManager");
        cardsMap.put(3, "CardTestRunning");

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPainMain = new javax.swing.JTabbedPane();
        PanelTesting = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        btnBackTestCreation = new javax.swing.JButton();
        btnForwardTestCreation = new javax.swing.JButton();
        PanelTestingCards = new javax.swing.JPanel();
        jPanelNameOfTest1 = new sdbtester.gui.CardNameOfTest();
        cardMysqlDbSettings1 = new sdbtester.gui.CardMysqlDbSettings();
        cardQueryManager1 = new sdbtester.gui.CardQueryManager();
        cardTestRunning2 = new sdbtester.gui.CardTestRunning();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        btnApplyAppServerPort = new javax.swing.JButton();
        spinnerAppServerPortNum = new javax.swing.JSpinner();
        jPanel4 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel6.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        btnBackTestCreation.setText("Назад");
        btnBackTestCreation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackTestCreationActionPerformed(evt);
            }
        });
        jPanel6.add(btnBackTestCreation);

        btnForwardTestCreation.setText("Вперед");
        btnForwardTestCreation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnForwardTestCreationActionPerformed(evt);
            }
        });
        jPanel6.add(btnForwardTestCreation);

        PanelTestingCards.setLayout(new java.awt.CardLayout());
        PanelTestingCards.add(jPanelNameOfTest1, "CardTestName");
        PanelTestingCards.add(cardMysqlDbSettings1, "CardDbConnect");
        PanelTestingCards.add(cardQueryManager1, "CardQueryManager");
        PanelTestingCards.add(cardTestRunning2, "CardTestRunning");

        javax.swing.GroupLayout PanelTestingLayout = new javax.swing.GroupLayout(PanelTesting);
        PanelTesting.setLayout(PanelTestingLayout);
        PanelTestingLayout.setHorizontalGroup(
            PanelTestingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelTestingLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addComponent(PanelTestingCards, javax.swing.GroupLayout.DEFAULT_SIZE, 1030, Short.MAX_VALUE)
        );
        PanelTestingLayout.setVerticalGroup(
            PanelTestingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelTestingLayout.createSequentialGroup()
                .addComponent(PanelTestingCards, javax.swing.GroupLayout.DEFAULT_SIZE, 449, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPainMain.addTab("Тестирование", PanelTesting);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jTabbedPainMain.addTab("Анализ", jPanel1);

        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setText("Номер порта: ");

        btnApplyAppServerPort.setText("Применить");
        btnApplyAppServerPort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnApplyAppServerPortActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnApplyAppServerPort))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(spinnerAppServerPortNum, javax.swing.GroupLayout.DEFAULT_SIZE, 174, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(spinnerAppServerPortNum, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnApplyAppServerPort)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(702, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(405, Short.MAX_VALUE))
        );

        jTabbedPainMain.addTab("Настройки", jPanel2);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(1026, 1026, 1026))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jTabbedPainMain)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPainMain)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private void btnForwardTestCreationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnForwardTestCreationActionPerformed
        switch (CurrentCard) {
            //CardTestName
            case 0: {
                if (jPanelNameOfTest1.getComboModel_ExistingTests().getSize() > 0 && jPanelNameOfTest1.getComboModel_ExistingTests().getSelectedItem().equals(jPanelNameOfTest1.getComboModel_ExistingTests().getElementAt(0))) {
                    if (jPanelNameOfTest1.getJtextNameOfTestCase().getText().length() > 0) {
                        String caseName = jPanelNameOfTest1.getJtextNameOfTestCase().getText();
                        String dbType = jPanelNameOfTest1.getComboBoxDbTypes().getSelectedItem().toString();
                        String caseDescription = jPanelNameOfTest1.getArea_DescriptionOfTestCase().getText();
                        if (appSettings.setCurrentTestName(caseName, dbType, caseDescription)) {
                            goToNextCard(true);
                            btnForwardTestCreation.setEnabled(appSettings.getTestCurrentDbName().equals(""));
                            if (btnForwardTestCreation.isEnabled()) {
                                cardMysqlDbSettings1.getComboDatabasesModel().setSelectedItem(appSettings.getTestCurrentDbName());
                            }
                        }
                    } else {
                    }
                } else if (jPanelNameOfTest1.getComboModel_ExistingTests().getSize() > 0) {
                    if (appSettings.loadTestFromTemplate(jPanelNameOfTest1.getComboModel_ExistingTests().getSelectedItem().toString(), jPanelNameOfTest1.getComboBoxDbTypes().getSelectedItem().toString())) {
                        goToNextCard(true);
                        btnForwardTestCreation.setEnabled(appSettings.getTestCurrentDbName().equals(""));
                        if (btnForwardTestCreation.isEnabled()) {
                            cardMysqlDbSettings1.getComboDatabasesModel().setSelectedItem(appSettings.getTestCurrentDbName());
                        }
                    }
                }
                break;
            }
            //CardDbConnect
            case 1: {
                if (cardMysqlDbSettings1.getComboDatabasesModel().getSize() > 0
                        && cardMysqlDbSettings1.getMysqlDbHelper().CreateConnectionMysqlForCertainDB(cardMysqlDbSettings1.getComboDatabasesModel().getSelectedItem().toString())) {
                    appSettings.storeTestCaseSettings(appSettings.getTestCaseName(), appSettings.getTestDbType());
                    goToNextCard(true);
                }
                break;
            }
            //CardQueryManager
            case 2: {
                goToNextCard(true);
                new Server(appSettings.getAppServerPort());
                break;
            }
            case 3: {
                
            }

        }
    }//GEN-LAST:event_btnForwardTestCreationActionPerformed

    private void btnBackTestCreationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackTestCreationActionPerformed
        goToNextCard(false);
    }//GEN-LAST:event_btnBackTestCreationActionPerformed

    private void btnApplyAppServerPortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnApplyAppServerPortActionPerformed
        appSettings.setAppServerPort(Integer.parseInt(spinnerAppServerPortNum.getValue().toString()));
        if (appSettings.storeGlobalSettings()) {
            JOptionPane.showMessageDialog(null, "Номер порта успешно изменен", "Info", JOptionPane.OK_OPTION);
        }
    }//GEN-LAST:event_btnApplyAppServerPortActionPerformed
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;




                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(StartForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(StartForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(StartForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StartForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new StartForm().setVisible(true);
            }
        });


    }

    JPanel makePane() {
        JPanel p = new JPanel();
        p.setOpaque(false);
        return p;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel PanelTesting;
    private javax.swing.JPanel PanelTestingCards;
    private javax.swing.JButton btnApplyAppServerPort;
    private javax.swing.JButton btnBackTestCreation;
    private javax.swing.JButton btnForwardTestCreation;
    private sdbtester.gui.CardMysqlDbSettings cardMysqlDbSettings1;
    private sdbtester.gui.CardQueryManager cardQueryManager1;
    private sdbtester.gui.CardTestRunning cardTestRunning2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel6;
    private sdbtester.gui.CardNameOfTest jPanelNameOfTest1;
    private javax.swing.JTabbedPane jTabbedPainMain;
    private javax.swing.JSpinner spinnerAppServerPortNum;
    // End of variables declaration//GEN-END:variables

    private void goToNextCard(boolean goToNext) {
        if (goToNext && cardsMap.containsKey(CurrentCard + 1)) {
            ++CurrentCard;
            card.show(PanelTestingCards, cardsMap.get(CurrentCard));
            if (!cardsMap.containsKey(CurrentCard + 1)) {
                btnForwardTestCreation.setEnabled(false);
            }
            btnBackTestCreation.setEnabled(true);
        } else if (cardsMap.containsKey(CurrentCard - 1)) {
            --CurrentCard;
            card.show(PanelTestingCards, cardsMap.get(CurrentCard));
            if (!cardsMap.containsKey(CurrentCard - 1)) {
                btnBackTestCreation.setEnabled(false);
            }
            btnForwardTestCreation.setEnabled(true);

        }
    }
}
